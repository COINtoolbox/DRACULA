{"name":"Dracula","tagline":"","body":"# Pipeline for the use of data reduction and clustering\r\nPipeline to use all methods of data reduction and clustering.\r\nSome cluster quality methods were also implemented.\r\nSo far we have implemented:\r\n\r\n* For data reduction:\r\n\t* PCA\r\n\t* empca\r\n\t* DeepLearning (requires `R`, `h2o` for `R` and `rpy2`)\r\n* For clustering:\r\n\t* MeanShift\r\n\t* KMeans\r\n\t* AffinityPropagation\r\n\t* AgglomerativeClustering\r\n\t* DBSCAN\r\n* For cluster quality testing:\r\n\t* silhouette_index\r\n\t* Dunn_index\r\n\t* DavisBouldin_index\r\n\t* vrc\r\n\r\n## Requirements\r\nTo run fully this pipeline, you will need:\r\n\r\n\tnumpy\r\n\tmatplotlib\r\n\tsklearn\r\n\r\n## Basic use\r\nThe idea of the code is to get the function of the pipeline and run the code in a outside dir.\r\nYou should first prepare your environment with two simple steps.\r\n\r\n\r\nThere are two approaches for using the pipeline\r\n* Normal Use:\r\n\r\n\tIn this way all the settings of the pipeline are set by a configuration file (`config.py`).\r\n\tIt only produces results for one specific configuration in each run.\r\n\tSee the  HOW_TO_USE_CONFIG file to see the possibilities of the configuration file.\r\n* SOM visualisation:\r\n\r\n\tIn this module, the SOM method is used.\r\n\tIt should be used for visualization of the possible clustering of the data.\r\n\tThis use does not folow the steps of the pipeline.\r\n\tBe careful for this module may take a realy long time according to the parameters chosen.\r\n\tThe configuration file is `config_som.py`.\r\n\tSee the README_COMPARISON file for more information.\r\n* Comparison Use:\r\n\r\n\tIt is  strongly recomended that you learn how to use the pipeline in the Normal approach before using this.\r\n\tThis new module was introduced to run the pipeline variating one of the set of parameters and comparing the results.\r\n\tHere a similar configuration file (`config_comparison.py`) is used but with extra keys.\r\n\tSee the README_COMPARISON file for more information.\r\n\r\n\r\n### Prepare environment\r\nIt is very easy to prepare your environment to run the pipeline.\r\nIt can be done in 2 steps:\r\n\r\nGet the nice functions we prepared. In the pipeline dir, do the command:\r\n\r\n\tsource SOURCE_ME\r\n\r\nCreate your own dir (preferably outside the pipeline dir) to run the code and copy the config.py file there:\r\n\r\n\tmkdir your_dir\r\n\tcd your_dir\r\n\tcp PIPELINE_DIR/example_configs/config.py config.py\r\n\r\nNow you are ready to run the pipeline functions!\r\n\r\n### Pipeline function\r\nInside your own working dir with the config.py file you can use any of these functions:\r\n\r\nTo run the whole pipeline execute:\r\n\r\n\tALL\r\n\r\nTo run just the reduction part execute:\r\n\r\n\tREDUCTION\r\n\r\nTo run just the clustering execute:\r\n\r\n\tCLUSTERING\r\n\r\nTo run just the clustering quality execute:\r\n\r\n\tQUALITY\r\n\r\nTo run just the plotting execute:\r\n\r\n\tPLOT\r\n\r\nTo run just the plotting of the spectra by gorups execute:\r\n\r\n\tPLOT_SPECS\r\n\r\n## Outputs\r\nThe outputs of reduction methods are placed in `red_data/`.\r\nThey will be input for clustering and plotting unless stated otherwise.\r\n\r\nThe outputs of clustering methods are placed in `cl_data/`.\r\nThey will be input for plotting unless stated otherwise.\r\n\r\nThe outputs of plotting are placed in `plots/`.\r\n\r\nAll modules also print the information used and resulting in `info/`.\r\n\r\n\r\n## Advanced plotting of results\r\nThe default plot of the results are in a figure (.png) with all the PCs colored according to the clusters.\r\nIf you want to change the extension of the figure or the color arrangement,\r\nchange the parameters in the config file (see HOW_TO_USE_CONFIG).\r\n\r\nIf you want other options, there are a few available using keys in the terminal when executing the `PLOT` command.\r\nHere are the plossibilities:\r\n\r\n\t-nd\t(or --no_diag\t) : do not plot diagonal\r\n\t-nf\t(or --no_fit\t) : do not fit in all dimensions simultanniously\r\n\t-nc\t(or --no_colors\t) : do not use colors\r\n\t-nl\t(or --no_label\t) : do not plot label\r\n\t-w\t(or --window\t) : keep plot in interactive window, this will not save the output automaticaly\r\n\t-pp\t(or --plot_pars\t) : plot specified pars, takes a string as input (ex: \"1 2\")\r\n\t-hs\t(or --horiz_space) : set horizontal spacing between the plots\r\n\t-vs\t(or --vert_space) : set vertical spacing between the plots\r\n\r\nYou can also see them by executing\r\n\r\n\tPLOT -h\r\n\r\n\r\n## Advanced plotting of spectra\r\nA plot of the orginial spectra by groups is also produced in a figure (.pdf).\r\nThe main figure shows the mean value of the spectra of each cluster found.\r\n\r\nIf you add the key -a , it will also produce a individual plot for each cluster with all the spectra and the mean value.\r\nIn the default option of extension (.pdf), all plots are grouped in a single file with multiple pages.\r\nIn other cases a extra file for each cluster will be created.\r\n\r\nThe parameters for plotting the spectra are:\r\n\r\n\t-w\t(or --window\t) : keep plot in interactive window, this will not save the output automaticaly\r\n\t-a\t(or --all_spec\t) : plot all spectra\r\n\r\nYou can also see them by executing\r\n\r\n\tPLOT_SPECS -h\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}